!Select the dataset to populate the graph database
DATASET = datasets/real/youtubeEdges.txt

!When running CW select the evaluation dataset to check if the algorithms 
!works (communities ground-truth)
EVALUATION_DATASET = datasets/synthetic/community30000.dat

!Choose which databases you want to include in the benchmark. Right the databases
! in a comma-separated list. Available dbs are titan, orientdb, neo4j, sparksee.
DATABASES = sparksee

!Please put a license key for Sparksee in order to run the benchmark with big graphs
SPARKSEE_LICENCE_KEY = 

!Choose which benchmark you want to run. Please select one of the above: are MIW, 
!SIW, QW-FN, QW-FA, QW-FS and CW. You should choose only one benchmark. ONLY when 
!running QW-FA please set ORIENTDB_LW_EDGES to false. In all other cases you should
!set ORIENTDB_LW_EDGES to true
BENCHMARK = MIW
ORIENTDB_LW_EDGES = true

!There are two possible ways to set the cache value, by setting the amount of nodes or
!a percentage of the total nodes for every cache value.

!If to choose the first way you should explicitly set the amount of nodes every cache
!value should have. The different values should be comma separated (e.g 500, 750, 1000).
CACHE_VALUES = 
!If you choose the second way you should set the total nodes the graph has, the number
!of cache values and the percentage factor you want to increment the initial cache value.
!Note that the initial cache value is equal to the cache increment factor. For example
!if CACHE_VALUES_CNT = 3 and CACHE_INCREMENT_FACTOR = 0.05 then the benchmark is going
!to initialize with the following cache values: 0.05, 0.1 and 0.15.
NODES_CNT = 30000
CACHE_VALUES_CNT = 6
CACHE_INCREMENT_FACTOR = 0.05

!Select the path you want the results to be written
RESULTS_PATH = results/

!Benchmark class paths
MIW_CLASS = eu.socialsensor.benchmarks.MassiveInsertionBenchmark
SIW_CLASS = eu.socialsensor.benchmarks.SingleInsertionBenchmark
QW-FN_CLASS = eu.socialsensor.benchmarks.FindNeighboursOfAllNodesBenchmark
QW-FA_CLASS = eu.socialsensor.benchmarks.FindNodesOfAllEdgesBenchmark
QW-FS_CLASS = eu.socialsensor.benchmarks.FindShortestPathBenchmark
CW_CLASS = eu.socialsensor.benchmarks.ClusteringBenchmark